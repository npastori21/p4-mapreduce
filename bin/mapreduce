#!/bin/bash
#
# mapreduce
#
# Build and start server
#

case "$1" in
    start)
        # Stop if manager is already running
        if pgrep -f mapreduce-manager &> /dev/null; then
            echo "Error: mapreduce-manager is already running"
            exit 1
        fi
        echo "starting mapreduce ..."
        mkdir -p var/log
        rm -f var/log/manager.log var/log/worker-6002.log var/log/worker-6001.log
        mapreduce-manager --host localhost --port 6000 --logfile var/log/manager.log &
        sleep 2  # give the Manager time to start
        mapreduce-worker --host localhost --port 6001 --manager-host localhost --manager-port 6000 --logfile var/log/worker-6001.log &
        mapreduce-worker --host localhost --port 6002 --manager-host localhost --manager-port 6000 --logfile var/log/worker-6002.log &
        ;;
    stop)
        echo "stopping mapreduce ..."
        mapreduce-submit --shutdown --host localhost --port 6000 || true
        sleep 2  # give the Manager time to receive signal and send to Workers
        # Kill manager
        if pgrep -f mapreduce-manager &> /dev/null; then
            echo "killing mapreduce manager ..."
            pkill -f mapreduce-manager || true
        fi
        # Kill any/all workers
        if pgrep -f mapreduce-worker &> /dev/null; then
            echo "killing mapreduce worker ..."
            pkill -f mapreduce-worker || true
        fi
        ;;
    status)
        if pgrep -f mapreduce-manager &> /dev/null; then
            echo "manager running"
        else
            echo "manager not running"
        fi
        
        if pgrep -f mapreduce-worker &> /dev/null; then
            echo "workers running"
            exit 0
        else
            echo "workers not running"
            exit 1
        fi
        ;;
    restart)
        $0 stop
        $0 start
        ;;
esac